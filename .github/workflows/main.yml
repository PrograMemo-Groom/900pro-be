name: Deploy to AWS EC2 using Docker

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE_NAME: saaad9/900pro   # 예: saaad9/900pro
  EC2_HOST: ec2-xx-xxx-xxx-xxx.ap-northeast-2.compute.amazonaws.com
  EC2_SSH_USER: ubuntu
  PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
  CONTAINER_NAME: myapp

jobs:
  build-and-push-docker:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up application.properties
      run: echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.properties

    - name: Build with Gradle
      run: ./gradlew build -x test

    - name: Build the Docker image
      run: docker build . --file docker/Dockerfile --tag ${{ env.DOCKER_IMAGE_NAME }}:latest

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Push Docker image
      run: docker push ${{ env.DOCKER_IMAGE_NAME }}:latest

  deploy-to-ec2:

    needs: build-and-push-docker
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_SSH_USER }}
        key: ${{ env.PRIVATE_KEY }}
        script: |
          echo "✅ 기존 컨테이너 중지 및 삭제"
          sudo docker stop ${{ env.CONTAINER_NAME }} || true
          sudo docker rm ${{ env.CONTAINER_NAME }} || true

          echo "✅ 최신 Docker 이미지 Pull"
          sudo docker pull ${{ env.DOCKER_IMAGE_NAME }}:latest

          echo "✅ 컨테이너 실행"
          sudo docker run --name ${{ env.CONTAINER_NAME }} -d -p 80:8080 -e TZ=Asia/Seoul ${{ env.DOCKER_IMAGE_NAME }}:latest
